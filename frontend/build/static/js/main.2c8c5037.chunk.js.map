{"version":3,"sources":["components/login/TextField.jsx","services/login.js","store/auth-context.js","components/login/Alert.jsx","components/login/LoginForm.jsx","components/login/LoginText.jsx","pages/Login.jsx","components/search/Input.jsx","helpers/general-helpers.js","store/teamMembers-context.js","components/home/TeamStats.jsx","components/modal/HeroModal.jsx","components/card/Card.jsx","components/card/CardGrid.jsx","pages/Home.jsx","components/search/Results.jsx","components/layout/Navbar.jsx","components/layout/Layout.jsx","App.jsx","index.jsx"],"names":["TextField","label","props","useField","field","meta","className","htmlFor","name","touched","error","autoComplete","component","loginUser","a","email","password","axios","url","method","data","response","token","checkTokenValidity","Error","AuthContext","React","createContext","isLoggedIn","login","logout","AuthContextProvider","initialToken","localStorage","getItem","useState","setToken","authContextValue","setItem","removeItem","Provider","value","children","Alert","showAlert","setShowAlert","useEffect","timeout","setTimeout","clearTimeout","Fragment","role","LoginForm","authCtx","useContext","tokenValidity","setTokenValidity","isLoading","setIsLoading","history","useHistory","validate","Yup","required","initialValues","validationSchema","onSubmit","credentials","isTokenValid","replace","type","LoginText","Login","Input","enteredSuperhero","setEnteredSuperhero","event","preventDefault","push","id","onChange","target","placeholder","getStrongesStat","summary","max","reduce","prev","current","powerstat","TeamMembersContext","heros","addHero","hero","removeHero","teamSummary","stats","TeamMembersContextProvider","setHeros","goodHerosCounter","setGoodHerosCounter","badHerosCounter","setBadHerosCounter","teamFullOfGoodHeros","setTeamFullOfGoodHeros","teamFullOfBadHeros","setTeamFullOfBadHeros","setTeamSummary","setStats","team","powerstatsSummary","forEach","powerstats","intelligence","parseInt","strength","speed","durability","power","combat","strongestStat","getTeamSummary","weight","height","appearance","getWeightAndHeight","teamContextValue","enteredHero","biography","alignment","includes","prevHeros","prevCount","updatedHeros","filter","TeamStats","pop","style","backgroundColor","color","undefined","length","toFixed","ResponsiveContainer","width","RadarChart","outerRadius","cx","cy","PolarGrid","stroke","PolarAngleAxis","dataKey","Radar","fill","fillOpacity","HeroModal","buttonClasses","buttonText","functionality","handleClose","setShow","fullName","aliases","eyeColor","hairColor","workPlace","work","base","capitalizedAlignment","charAt","toUpperCase","slice","heightCm","weightKg","inHome","Modal","show","onHide","size","dialogClassName","Header","closeButton","Title","Body","alt","src","image","Footer","onClick","Card","isModalOpen","setIsModalOpen","loading","decoding","CardGrid","herosList","map","Home","Results","setHerosList","location","useLocation","heroName","URLSearchParams","search","get","endpoint","results","console","log","fetchHeroes","Boolean","Navbar","pathname","to","textDecoration","Layout","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c8c5037.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\nimport './TextField.css';\n\nconst TextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <div className='mt-4 mb-4'>\n      <label className='text-primary' htmlFor={field.name}>\n        {label}\n      </label>\n      <input\n        className={`form-control shadow-none ${\n          meta.touched && meta.error && 'is-invalid'\n        }`}\n        autoComplete='off'\n        {...field}\n        {...props}\n      />\n      <ErrorMessage component='div' className='error' name={field.name} />\n    </div>\n  );\n};\n\nexport default TextField;\n","import axios from 'axios';\n\nconst baseUrl = 'http://challenge-react.alkemy.org/';\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    const response = await axios({\n      url: baseUrl,\n      method: 'POST',\n      data: {\n        email: email,\n        password: password,\n      },\n    });\n    return response.data.token;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const checkTokenValidity = (token) => {\n  if (token instanceof Error) {\n    return false;\n  }\n  return true;\n};\n","import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('userToken');\n\n  const [token, setToken] = useState(initialToken);\n\n  //Verificar si existe token\n  let userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('userToken');\n  };\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('userToken', token);\n  };\n\n  const authContextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React, { useEffect, useState } from 'react';\n\nconst Alert = () => {\n  const [showAlert, setShowAlert] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShowAlert(false);\n    }, 4000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {showAlert && (\n        <div className='text-center mt-5 '>\n          <div className='alert alert-danger' role='alert'>\n            You have entered an invalid username or password\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Alert;\n","import React, { useContext, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport TextField from './TextField';\nimport * as Yup from 'yup';\nimport { loginUser, checkTokenValidity } from '../../services/login';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport Alert from './Alert';\n\nconst LoginForm = () => {\n  const authCtx = useContext(AuthContext);\n  const [tokenValidity, setTokenValidity] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const validate = Yup.object({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validate}\n      onSubmit={async (credentials) => {\n        setIsLoading(true);\n        const token = await loginUser(credentials);\n        const isTokenValid = checkTokenValidity(token);\n        setIsLoading(false);\n        if (!isTokenValid) {\n          setTokenValidity(false);\n          return;\n        }\n        authCtx.login(token);\n        history.replace('/home');\n      }}\n    >\n      {\n        <div>\n          <h1 className='text-primary'>Sign In</h1>\n          <Form>\n            <TextField label='Email' name='email' type='email' />\n            <TextField label='Password' name='password' type='password' />\n            {!isLoading && (\n              <button type='submit' className='btn btn-primary mt-3'>\n                Login\n              </button>\n            )}\n\n            {isLoading && (\n              <div className='text-center'>\n                <div\n                  className='spinner-border text-primary'\n                  role='status'\n                ></div>\n              </div>\n            )}\n\n            {!tokenValidity && !isLoading && <Alert />}\n          </Form>\n        </div>\n      }\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n\nconst LoginText = () => {\n  return (\n    <React.Fragment>\n      <h1 className='text-center text-gradient display-1 font-weight-bold'>\n        Superheros App\n      </h1>\n      <p className='p-1 text-center w-75 text-white mx-auto'>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ex eligendi\n        quia eaque corrupti magni earum architecto.\n      </p>\n    </React.Fragment>\n  );\n};\n\nexport default LoginText;\n","import React from 'react';\nimport LoginForm from '../components/login/LoginForm';\nimport LoginText from '../components/login/LoginText';\nimport './Login.css';\n\nconst Login = () => {\n  return (\n    <section className='welcome'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-lg-5 order-last order-lg-first'>\n            <LoginForm />\n          </div>\n          <div className='col-lg-7 order-first order-lg-last'>\n            <LoginText />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Input.css';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Input = (props) => {\n  const [enteredSuperhero, setEnteredSuperhero] = useState('');\n\n  const history = useHistory();\n\n  const superheroChangeHandler = (event) => {\n    setEnteredSuperhero(event.target.value);\n  };\n\n  const searchHeroHandler = (event) => {\n    event.preventDefault();\n    history.push(`/search?heroName=${enteredSuperhero}`);\n  };\n\n  return (\n    <form onSubmit={searchHeroHandler}>\n      <div className='input-group'>\n        <input\n          className='form-control rounded-0 border-end-0 border'\n          type='search'\n          id='superhero'\n          name='superhero'\n          onChange={superheroChangeHandler}\n          value={enteredSuperhero}\n          placeholder='Find a hero for your team'\n        />\n        <span className='input-group-append'>\n          <button className='btn btn-lightblue btn-outline-primary border bg-white border-start-0 rounded-0'>\n            <i>\n              <AiOutlineSearch />\n            </i>\n          </button>\n        </span>\n      </div>\n    </form>\n  );\n};\n\nexport default Input;\n","export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\n\nexport const getTeamSummary = (team) => {\n  const powerstatsSummary = [\n    { powerstat: 'Intelligence', value: 0 },\n    { powerstat: 'Strength', value: 0 },\n    { powerstat: 'Speed', value: 0 },\n    { powerstat: 'Durability', value: 0 },\n    { powerstat: 'Power', value: 0 },\n    { powerstat: 'Combat', value: 0 },\n  ];\n\n  team.forEach((hero) => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    } else {\n      powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    }\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    } else {\n      powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    }\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    } else {\n      powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    }\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    } else {\n      powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    }\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    } else {\n      powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    }\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    } else {\n      powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n    }\n  });\n\n  const strongestStat = { strongestStat: getStrongesStat(powerstatsSummary) };\n\n  powerstatsSummary.push(strongestStat);\n\n  return powerstatsSummary;\n};\n\nconst getStrongesStat = (summary) => {\n  const max = summary.reduce(\n    (prev, current) => (prev.value > current.value ? prev : current),\n    1\n  );\n  if (max.value === 0) {\n    return '';\n  }\n\n  return max.powerstat;\n};\n\nexport const getWeightAndHeight = (team) => {\n  const stats = { weight: 0, height: 0 };\n\n  team.forEach((hero) => {\n    stats.weight += parseInt(hero.appearance.weight[1].replace(' kg', ''));\n    stats.height += parseInt(hero.appearance.height[1].replace(' cm', ''));\n  });\n\n  return stats;\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  isHeroInTeam,\n  getTeamSummary,\n  getWeightAndHeight,\n} from '../helpers/general-helpers';\n\nconst TeamMembersContext = React.createContext({\n  heros: [],\n  addHero: (hero) => {},\n  removeHero: (id) => {},\n  teamSummary: [],\n  stats: {},\n});\n\nexport const TeamMembersContextProvider = (props) => {\n  const [heros, setHeros] = useState([]);\n  const [goodHerosCounter, setGoodHerosCounter] = useState(0);\n  const [badHerosCounter, setBadHerosCounter] = useState(0);\n  const [teamFullOfGoodHeros, setTeamFullOfGoodHeros] = useState(false);\n  const [teamFullOfBadHeros, setTeamFullOfBadHeros] = useState(false);\n  const [teamSummary, setTeamSummary] = useState([]);\n  const [stats, setStats] = useState({});\n\n  useEffect(() => {\n    setTeamSummary(getTeamSummary(heros));\n    setStats(getWeightAndHeight(heros));\n    if (goodHerosCounter === 3) {\n      setTeamFullOfGoodHeros(true);\n    } else {\n      if (goodHerosCounter < 3) {\n        setTeamFullOfGoodHeros(false);\n      }\n    }\n    if (badHerosCounter >= 3) {\n      setTeamFullOfBadHeros(true);\n    } else {\n      if (badHerosCounter < 3) {\n        setTeamFullOfBadHeros(false);\n      }\n    }\n  }, [goodHerosCounter, badHerosCounter, heros]);\n\n  // console.log(teamSummary);\n\n  const addHeroToTeamHandler = (hero) => {\n    if (hero.biography.alignment === 'good' && teamFullOfGoodHeros) {\n      return;\n    }\n\n    if (hero.biography.alignment === 'bad' && teamFullOfBadHeros) {\n      return;\n    }\n    if (isHeroInTeam(hero, heros)) return;\n\n    setHeros((prevHeros) => {\n      if (hero.biography.alignment === 'good') {\n        setGoodHerosCounter((prevCount) => prevCount + 1);\n      }\n      if (hero.biography.alignment === 'bad') {\n        setBadHerosCounter((prevCount) => prevCount + 1);\n      }\n\n      const updatedHeros = [...prevHeros];\n      updatedHeros.push(hero);\n      return updatedHeros;\n    });\n  };\n\n  const removeHeroFromTeamHandler = (enteredHero) => {\n    if (enteredHero.biography.alignment === 'good') {\n      setGoodHerosCounter((prevCount) => prevCount - 1);\n    }\n    if (enteredHero.biography.alignment === 'bad') {\n      setBadHerosCounter((prevCount) => prevCount - 1);\n    }\n    setHeros((prevHeros) => {\n      const updatedHeros = prevHeros.filter(\n        (hero) => hero.id !== enteredHero.id\n      );\n\n      return updatedHeros;\n    });\n  };\n\n  const teamContextValue = {\n    heros: heros,\n    addHero: addHeroToTeamHandler,\n    removeHero: removeHeroFromTeamHandler,\n    teamSummary: teamSummary,\n    stats: stats,\n  };\n\n  return (\n    <TeamMembersContext.Provider value={teamContextValue}>\n      {props.children}\n    </TeamMembersContext.Provider>\n  );\n};\n\nexport default TeamMembersContext;\n","import React, { useContext } from 'react';\nimport {\n  ResponsiveContainer,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  Radar,\n} from 'recharts';\nimport TeamMembersContext from '../../store/teamMembers-context';\nimport './TeamStats.css';\n\nconst TeamStats = () => {\n  const { teamSummary, stats, heros } = useContext(TeamMembersContext);\n\n  const data = [...teamSummary];\n  data.pop();\n\n  return (\n    <div\n      style={{ backgroundColor: '#1a2950' }}\n      className='container rounded team-stats'\n    >\n      <div className='row pt-5 pb-5'>\n        <div className='col'>\n          <h4 className='text-white text-center mb-3'>Team</h4>\n          <ul style={{ color: '#f8f9fa' }} className='list-unstyled'>\n            <li className='pt-1 p-l'>\n              Intelligence:{' '}\n              {teamSummary[0] !== undefined ? teamSummary[0].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Combat: {teamSummary[5] !== undefined ? teamSummary[5].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Strength:{' '}\n              {teamSummary[1] !== undefined ? teamSummary[1].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Power: {teamSummary[4] !== undefined ? teamSummary[4].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Speed: {teamSummary[2] !== undefined ? teamSummary[2].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Durability:{' '}\n              {teamSummary[3] !== undefined ? teamSummary[3].value : 0}\n            </li>\n            <li className='pt-1 p-l'>\n              Strongest Powerstat:{' '}\n              {teamSummary[6] !== undefined ? teamSummary[6].strongestStat : ''}\n            </li>\n            <li className='pt-1 p-l'>\n              Average Weight:{' '}\n              {heros.length === 0\n                ? 0\n                : (stats.weight / heros.length).toFixed(2)}{' '}\n              kg\n            </li>\n            <li className='pt-1 p-l'>\n              Average Height:{' '}\n              {heros.length === 0\n                ? 0\n                : (stats.height / heros.length).toFixed(2)}{' '}\n              cm\n            </li>\n          </ul>\n        </div>\n        <div className='col radar'>\n          <ResponsiveContainer width='100%' height='100%'>\n            <RadarChart outerRadius={88} cx={140} cy={115} data={data}>\n              <PolarGrid stroke='#f8f9fa' />\n              <PolarAngleAxis dataKey='powerstat' stroke='#f8f9fa' />\n              <Radar\n                dataKey='value'\n                stroke='#8884d8'\n                fill='#8884d8'\n                fillOpacity={0.6}\n              />\n            </RadarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamStats;\n","import React, { useContext } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TeamMembersContext from '../../store/teamMembers-context';\n\nimport './HeroModal.css';\n\nconst HeroModal = (props) => {\n  const handleClose = () => props.setShow(false);\n  const { addHero, removeHero } = useContext(TeamMembersContext);\n\n  const { height, weight } = props.hero.appearance;\n  const fullName = props.hero.biography['full-name'];\n  const aliases = props.hero.biography.aliases;\n  const eyeColor = props.hero.appearance['eye-color'];\n  const hairColor = props.hero.appearance['hair-color'];\n  const workPlace = props.hero.work.base;\n  const alignment = props.hero.biography.alignment;\n  const capitalizedAlignment =\n    alignment.charAt(0).toUpperCase() + alignment.slice(1);\n\n  const heightCm = height[1];\n  const weightKg = weight[1];\n\n  let buttonClasses;\n  let buttonText;\n  let functionality;\n\n  if (props.inHome) {\n    buttonClasses = 'btn btn-danger';\n    buttonText = 'Delete Hero';\n    functionality = removeHero;\n  } else {\n    buttonClasses = 'btn btn-success';\n    buttonText = 'Add Hero';\n    functionality = addHero;\n  }\n\n  const updateTeamHandler = () => {\n    functionality(props.hero);\n    handleClose();\n  };\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={handleClose}\n      size='xl'\n      dialogClassName='h-80'\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{props.hero.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className='container'>\n          <div className='row flex-container'>\n            <div className='hero-image'>\n              <img\n                className='img-fluid rounded'\n                alt='hero asdas'\n                src={props.hero.image.url}\n              ></img>\n            </div>\n            <div className='hero-info'>\n              <ul>\n                <li>{`Weight: ${weightKg}`}</li>\n                <li>{`Height: ${heightCm}`}</li>\n                <li>{`Name: ${fullName}`}</li>\n                <li>{`Aliases: ${aliases}`}</li>\n                <li>{`Eye color: ${eyeColor}`}</li>\n                <li>{`Eye color: ${hairColor}`}</li>\n                <li>{`Workplace: ${workPlace}`}</li>\n                <li>{`Hero alignment: ${capitalizedAlignment}`}</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className='btn btn-outline-danger' onClick={handleClose}>\n          Close\n        </button>\n        <button onClick={updateTeamHandler} className={buttonClasses}>\n          {buttonText}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default HeroModal;\n","import React, { useState, useContext } from 'react';\nimport TeamMembersContext from '../../store/teamMembers-context';\nimport HeroModal from '../modal/HeroModal';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const { image, name } = props.hero;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { addHero, removeHero } = useContext(TeamMembersContext);\n\n  let buttonClasses;\n  let buttonText;\n  let functionality;\n\n  if (props.inHome) {\n    buttonClasses = 'btn btn-danger';\n    buttonText = 'Delete Hero';\n    functionality = removeHero;\n  } else {\n    buttonClasses = 'btn btn-success';\n    buttonText = 'Add Hero';\n    functionality = addHero;\n  }\n\n  const openModalHandler = () => {\n    setIsModalOpen(true);\n  };\n\n  const updateTeamHandler = () => {\n    functionality(props.hero);\n  };\n\n  return (\n    <React.Fragment>\n      {isModalOpen && (\n        <HeroModal\n          inHome={props.inHome}\n          hero={props.hero}\n          show={isModalOpen}\n          setShow={setIsModalOpen}\n        />\n      )}\n      <div className='card bg-dark text-white mt-2 h-500'>\n        <img\n          loading='lazy'\n          decoding='async'\n          src={image.url}\n          className='card-img h-500'\n          alt={`${name} card`}\n        />\n        <div className='card-img-overlay d-flex flex-column justify-content-between p-0'>\n          <div className='p-3 mt-2 opacity h-4r'>\n            <h3 className='card-title text-center'>{name}</h3>\n          </div>\n\n          <div className='d-flex justify-content-around mb-5'>\n            <button\n              onClick={updateTeamHandler}\n              type='button'\n              className={buttonClasses}\n            >\n              {buttonText}\n            </button>\n            <button\n              onClick={openModalHandler}\n              type='button'\n              className='btn btn-primary'\n            >\n              Details\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardGrid = ({ herosList, inHome }) => {\n  return (\n    <div className='container'>\n      <div className='row'>\n        {herosList.map((hero) => {\n          return (\n            <div className='col-lg-4 col-md-6' key={hero.id}>\n              <Card hero={hero} inHome={inHome} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CardGrid;\n","import React, { useContext } from 'react';\nimport Input from '../components/search/Input';\nimport TeamStats from '../components/home/TeamStats';\nimport CardGrid from '../components/card/CardGrid';\nimport TeamMembersContext from '../store/teamMembers-context';\n\nconst Home = () => {\n  const { heros } = useContext(TeamMembersContext);\n\n  return (\n    <section>\n      <div className='container bg-light rounded p-3 mt-5'>\n        <div className='row'>\n          <div className='col-lg-5 p-5'>\n            <h1>Your superhero team</h1>\n            <div>\n              <Input />\n            </div>\n          </div>\n          <div className='col-lg-7 team-stats'>\n            <TeamStats />\n          </div>\n          <div className='mt-3'>\n            {heros.length > 0 ? (\n              <CardGrid inHome={true} herosList={heros} />\n            ) : (\n              <React.Fragment>\n                <h4 className='mt-5 text-center'>Your Team is empty</h4>\n                <p className='text-center'>\n                  Add heroes to your Team to form the best team of superheroes\n                  ever!\n                </p>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport CardGrid from '../card/CardGrid';\n\nconst Results = () => {\n  const [herosList, setHerosList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const heroName = queryParams.get('heroName');\n\n  const endpoint = `http://localhost:5000/getHeros/?heroName=${heroName}`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchHeroes = async () => {\n      const response = await axios.get(endpoint);\n      setIsLoading(false);\n      response.data.response === 'success'\n        ? setHerosList(response.data.results)\n        : console.log('error');\n    };\n\n    fetchHeroes();\n  }, [endpoint]);\n\n  return (\n    <section>\n      <div className='container mt-5 pb-5'>\n        {isLoading && (\n          <div className='d-flex justify-content-center'>\n            <div className='spinner-border text-primary' role='status'></div>\n          </div>\n        )}\n        {Boolean(herosList.length === 0) && !isLoading && (\n          <p className='text-center pt-5 h1 text-light'>No results found</p>\n        )}\n        {Boolean(herosList.length > 0) && !isLoading && (\n          <CardGrid herosList={herosList} inHome={false} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Results;\n","import React, { useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst Navbar = () => {\n  const authCtx = useContext(AuthContext);\n\n  const { pathname } = useLocation();\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <nav className='navbar navbar-dark' style={{ backgroundColor: '#081734' }}>\n      <div className='container-fluid'>\n        {pathname === '/search' && (\n          <Link to='/home' style={{ textDecoration: 'none' }}>\n            <button className='btn btn-outline-primary'>\n              <BsArrowLeft />\n            </button>\n          </Link>\n        )}\n\n        <Link to='/home' style={{ textDecoration: 'none' }}>\n          <span className='navbar-brand mb-0 h1'>Superheros App</span>\n        </Link>\n\n        <button\n          type='button'\n          className='btn btn-outline-primary'\n          onClick={logoutHandler}\n        >\n          Logout\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nimport Navbar from './Navbar';\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <Navbar />\n      <main>{props.children}</main>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { useContext } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Results from './components/search/Results';\nimport './App.css';\nimport AuthContext from './store/auth-context';\nimport { TeamMembersContextProvider } from './store/teamMembers-context';\nimport Layout from './components/layout/Layout';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Login />\n      </Route>\n\n      {authCtx.isLoggedIn && (\n        <React.Fragment>\n          <TeamMembersContextProvider>\n            <Route path='/home'>\n              <Layout>\n                <Home />\n              </Layout>\n            </Route>\n            <Route path='/search'>\n              <Layout>\n                <Results />\n              </Layout>\n            </Route>\n          </TeamMembersContextProvider>\n        </React.Fragment>\n      )}\n\n      <Route path='*'>\n        <Redirect to='/' />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}