{"ast":null,"code":"import _slicedToArray from\"/home/facu/Desktop/alkemy/superheros/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/React.createContext({token:'',isLoggedIn:false,login:function login(token){},logout:function logout(){}});export var AuthContextProvider=function AuthContextProvider(props){var initialToken=localStorage.getItem('userToken');var _useState=useState(initialToken),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];//Verificar si existe token\nvar userIsLoggedIn=!!token;var logoutHandler=function logoutHandler(){setToken(null);localStorage.removeItem('userToken');};var loginHandler=function loginHandler(token){setToken(token);localStorage.setItem('userToken',token);};var authContextValue={token:token,isLoggedIn:userIsLoggedIn,login:loginHandler,logout:logoutHandler};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:authContextValue,children:props.children});};export default AuthContext;","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","authContextValue","children"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGF,KAAK,CAACG,aAAN,CAAoB,CACtCC,KAAK,CAAE,EAD+B,CAEtCC,UAAU,CAAE,KAF0B,CAGtCC,KAAK,CAAE,eAACF,KAAD,CAAW,CAAE,CAHkB,CAItCG,MAAM,CAAE,iBAAM,CAAE,CAJsB,CAApB,CAApB,CAOA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CAC5C,GAAMC,CAAAA,YAAY,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB,CAD4C,cAGlBX,QAAQ,CAACS,YAAD,CAHU,wCAGrCN,KAHqC,eAG9BS,QAH8B,eAK5C;AACA,GAAIC,CAAAA,cAAc,CAAG,CAAC,CAACV,KAAvB,CAEA,GAAMW,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BF,QAAQ,CAAC,IAAD,CAAR,CACAF,YAAY,CAACK,UAAb,CAAwB,WAAxB,EACD,CAHD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACb,KAAD,CAAW,CAC9BS,QAAQ,CAACT,KAAD,CAAR,CACAO,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAkCd,KAAlC,EACD,CAHD,CAKA,GAAMe,CAAAA,gBAAgB,CAAG,CACvBf,KAAK,CAAEA,KADgB,CAEvBC,UAAU,CAAES,cAFW,CAGvBR,KAAK,CAAEW,YAHgB,CAIvBV,MAAM,CAAEQ,aAJe,CAAzB,CAOA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEI,gBAA7B,UACGV,KAAK,CAACW,QADT,EADF,CAKD,CA9BM,CAgCP,cAAelB,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('userToken');\n\n  const [token, setToken] = useState(initialToken);\n\n  //Verificar si existe token\n  let userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('userToken');\n  };\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('userToken', token);\n  };\n\n  const authContextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}