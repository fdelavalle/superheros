{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/frontend/src/components/search/Toast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Toast = () => {\n  _s();\n\n  const [show, setShow] = useState(true); // On componentDidMount set the timer\n\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      // After 3 seconds set the show value to false\n      setShow(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, []); // If show is false the component will return null and stop here\n\n  if (!show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-fixed bottom-0 end-0 p-5\",\n    style: {\n      zIndex: '11'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-body\",\n        children: \"Hello, world! This is a toast message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        \"data-bs-dismiss\": \"toast\",\n        \"aria-label\": \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toast, \"7rrxj0wE5iz58YydTDN/pg4Izes=\");\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/components/search/Toast.js"],"names":["React","useState","useEffect","Toast","show","setShow","timeId","setTimeout","clearTimeout","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC,CADkB,CAGlB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,MAAM,GAAGC,UAAU,CAAC,MAAM;AAC9B;AACAF,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAHwB,EAGtB,IAHsB,CAAzB;AAKA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACF,MAAD,CAAZ;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT,CAJkB,CAelB;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAA1D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,2BAAgB,OAHlB;AAIE,sBAAW;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMN,K;;KAAAA,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Toast = () => {\n  const [show, setShow] = useState(true);\n\n  // On componentDidMount set the timer\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      // After 3 seconds set the show value to false\n      setShow(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, []);\n\n  // If show is false the component will return null and stop here\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className='position-fixed bottom-0 end-0 p-5' style={{ zIndex: '11' }}>\n      <div className='toast-header'>\n        <div className='toast-body'>Hello, world! This is a toast message.</div>\n        <button\n          type='button'\n          className='btn-close'\n          data-bs-dismiss='toast'\n          aria-label='Close'\n        ></button>\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}