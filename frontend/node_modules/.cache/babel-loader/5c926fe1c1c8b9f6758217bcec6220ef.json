{"ast":null,"code":"export var isHeroInTeam=function isHeroInTeam(enteredHero,team){return team.includes(enteredHero);};export var getTeamSummary=function getTeamSummary(team){var powerstatsSummary=[{powerstat:'Intelligence',value:0},{powerstat:'Strength',value:0},{powerstat:'Speed',value:0},{powerstat:'Durability',value:0},{powerstat:'Power',value:0},{powerstat:'Combat',value:0}];team.forEach(function(hero){if(hero.powerstats.intelligence==='null'){powerstatsSummary[0].value+=0;}else{powerstatsSummary[0].value+=parseInt(hero.powerstats.intelligence);}if(hero.powerstats.strength==='null'){powerstatsSummary[1].value+=0;}else{powerstatsSummary[1].value+=parseInt(hero.powerstats.strength);}if(hero.powerstats.speed==='null'){powerstatsSummary[2].value+=0;}else{powerstatsSummary[2].value+=parseInt(hero.powerstats.speed);}if(hero.powerstats.durability==='null'){powerstatsSummary[3].value+=0;}else{powerstatsSummary[3].value+=parseInt(hero.powerstats.durability);}if(hero.powerstats.power==='null'){powerstatsSummary[4].value+=0;}else{powerstatsSummary[4].value+=parseInt(hero.powerstats.power);}if(hero.powerstats.combat==='null'){powerstatsSummary[5].value+=0;}else{powerstatsSummary[5].value+=parseInt(hero.powerstats.combat);}});var strongestStat={strongestStat:getStrongesStat(powerstatsSummary)};powerstatsSummary.push(strongestStat);return powerstatsSummary;};var getStrongesStat=function getStrongesStat(summary){var max=summary.reduce(function(prev,current){return prev.value>current.value?prev:current;},1);if(max.value===0){return'';}return max.powerstat;};export var getWeightAndHeight=function getWeightAndHeight(team){var stats={weight:0,height:0};team.forEach(function(hero){stats.weight+=parseInt(hero.appearance.weight[1].replace(' kg',''));stats.height+=parseInt(hero.appearance.height[1].replace(' cm',''));});return stats;};","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/helpers/general-helpers.js"],"names":["isHeroInTeam","enteredHero","team","includes","getTeamSummary","powerstatsSummary","powerstat","value","forEach","hero","powerstats","intelligence","parseInt","strength","speed","durability","power","combat","strongestStat","getStrongesStat","push","summary","max","reduce","prev","current","getWeightAndHeight","stats","weight","height","appearance","replace"],"mappings":"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","sourcesContent":["export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\n\nexport const getTeamSummary = (team) => {\n  const powerstatsSummary = [\n    { powerstat: 'Intelligence', value: 0 },\n    { powerstat: 'Strength', value: 0 },\n    { powerstat: 'Speed', value: 0 },\n    { powerstat: 'Durability', value: 0 },\n    { powerstat: 'Power', value: 0 },\n    { powerstat: 'Combat', value: 0 },\n  ];\n\n  team.forEach((hero) => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    } else {\n      powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    }\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    } else {\n      powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    }\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    } else {\n      powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    }\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    } else {\n      powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    }\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    } else {\n      powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    }\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    } else {\n      powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n    }\n  });\n\n  const strongestStat = { strongestStat: getStrongesStat(powerstatsSummary) };\n\n  powerstatsSummary.push(strongestStat);\n\n  return powerstatsSummary;\n};\n\nconst getStrongesStat = (summary) => {\n  const max = summary.reduce(\n    (prev, current) => (prev.value > current.value ? prev : current),\n    1\n  );\n  if (max.value === 0) {\n    return '';\n  }\n\n  return max.powerstat;\n};\n\nexport const getWeightAndHeight = (team) => {\n  const stats = { weight: 0, height: 0 };\n\n  team.forEach((hero) => {\n    stats.weight += parseInt(hero.appearance.weight[1].replace(' kg', ''));\n    stats.height += parseInt(hero.appearance.height[1].replace(' cm', ''));\n  });\n\n  return stats;\n};\n"]},"metadata":{},"sourceType":"module"}