{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://challenge-react.alkemy.org/';\nconst baseUrl1 = 'http://localhost:8080/login';\nexport const loginUser = async ({\n  email,\n  password\n}) => {\n  try {\n    const response = await axios.post(baseUrl, {\n      body: {\n        email: email,\n        password: password\n      }\n    });\n    return response.data.token;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const checkToken = token => {\n  if (token.includes('401 (Unauthorized)')) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/src/services/login.js"],"names":["axios","baseUrl","baseUrl1","loginUser","email","password","response","post","body","data","token","error","message","checkToken","includes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,oCAAhB;AACA,MAAMC,QAAQ,GAAG,6BAAjB;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA+B;AACtD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,OAAX,EAAoB;AACzCO,MAAAA,IAAI,EAAE;AACJJ,QAAAA,KAAK,EAAEA,KADH;AAEJC,QAAAA,QAAQ,EAAEA;AAFN;AADmC,KAApB,CAAvB;AAMA,WAAOC,QAAQ,CAACG,IAAT,CAAcC,KAArB;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,OAAb;AACD;AACF,CAZM;AAcP,OAAO,MAAMC,UAAU,GAAIH,KAAD,IAAW;AACnC,MAAIA,KAAK,CAACI,QAAN,CAAe,oBAAf,CAAJ,EAA0C;AACxC,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'http://challenge-react.alkemy.org/';\nconst baseUrl1 = 'http://localhost:8080/login';\n\nexport const loginUser = async ({ email, password }) => {\n  try {\n    const response = await axios.post(baseUrl, {\n      body: {\n        email: email,\n        password: password,\n      },\n    });\n    return response.data.token;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const checkToken = (token) => {\n  if (token.includes('401 (Unauthorized)')) {\n    return false;\n  }\n  return true;\n};\n"]},"metadata":{},"sourceType":"module"}