{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  invalidToken: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('userToken');\n  const [token, setToken] = useState(initialToken);\n  const [invalidToken, setInvalidToken] = useState(false); //Verificar si existe token\n\n  let userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('userToken');\n  };\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem('userToken', token);\n  };\n\n  const contextValue = {\n    token: token,\n    invalidToken: invalidToken,\n    setTokenValidity: setInvalidToken,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"RV5KxBbglLBWRvAzBpTxAWE62Vk=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","invalidToken","isLoggedIn","login","logout","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","setInvalidToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","contextValue","setTokenValidity","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,YAAY,EAAE,EAFwB;AAGtCC,EAAAA,UAAU,EAAE,KAH0B;AAItCC,EAAAA,KAAK,EAAGH,KAAD,IAAW,CAAE,CAJkB;AAKtCI,EAAAA,MAAM,EAAE,MAAM,CAAE;AALsB,CAApB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AAEA,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBb,QAAQ,CAACU,YAAD,CAAlC;AAEA,QAAM,CAACN,YAAD,EAAeU,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD,CAL4C,CAO5C;;AACA,MAAIe,cAAc,GAAG,CAAC,CAACZ,KAAvB;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACM,UAAb,CAAwB,WAAxB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAIf,KAAD,IAAW;AAC9BU,IAAAA,QAAQ,CAACV,KAAD,CAAR;AACAQ,IAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkChB,KAAlC;AACD,GAHD;;AAKA,QAAMiB,YAAY,GAAG;AACnBjB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,YAAY,EAAEA,YAFK;AAGnBiB,IAAAA,gBAAgB,EAAEP,eAHC;AAInBT,IAAAA,UAAU,EAAEU,cAJO;AAKnBT,IAAAA,KAAK,EAAEY,YALY;AAMnBX,IAAAA,MAAM,EAAES;AANW,GAArB;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,YAA7B;AAAA,cACGX,KAAK,CAACa;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCM;;GAAMd,mB;;KAAAA,mB;AAoCb,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  invalidToken: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialToken = localStorage.getItem('userToken');\n\n  const [token, setToken] = useState(initialToken);\n\n  const [invalidToken, setInvalidToken] = useState(false);\n\n  //Verificar si existe token\n  let userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('userToken');\n  };\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem('userToken', token);\n  };\n\n  const contextValue = {\n    token: token,\n    invalidToken: invalidToken,\n    setTokenValidity: setInvalidToken,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}