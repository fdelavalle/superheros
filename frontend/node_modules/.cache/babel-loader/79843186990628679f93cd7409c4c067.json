{"ast":null,"code":"export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\nexport const getTeamSummary = team => {\n  const powerstatsSummary = [{\n    powerstat: 'Intelligence',\n    value: 0\n  }, {\n    powerstat: 'Strength',\n    value: 0\n  }, {\n    powerstat: 'Speed',\n    value: 0\n  }, {\n    powerstat: 'Durability',\n    value: 0\n  }, {\n    powerstat: 'Power',\n    value: 0\n  }, {\n    powerstat: 'Combat',\n    value: 0\n  }];\n  team.forEach(hero => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    }\n\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    }\n\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    }\n\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    }\n\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    }\n\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    }\n\n    powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n  });\n  return powerstatsSummary;\n};","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/helpers/general-helpers.js"],"names":["isHeroInTeam","enteredHero","team","includes","getTeamSummary","powerstatsSummary","powerstat","value","forEach","hero","powerstats","intelligence","strength","speed","durability","power","combat","parseInt"],"mappings":"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","sourcesContent":["export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\n\nexport const getTeamSummary = (team) => {\n  const powerstatsSummary = [\n    { powerstat: 'Intelligence', value: 0 },\n    { powerstat: 'Strength', value: 0 },\n    { powerstat: 'Speed', value: 0 },\n    { powerstat: 'Durability', value: 0 },\n    { powerstat: 'Power', value: 0 },\n    { powerstat: 'Combat', value: 0 },\n  ];\n\n  team.forEach((hero) => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    }\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    }\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    }\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    }\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    }\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    }\n\n    powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n  });\n\n  return powerstatsSummary;\n};\n"]},"metadata":{},"sourceType":"module"}