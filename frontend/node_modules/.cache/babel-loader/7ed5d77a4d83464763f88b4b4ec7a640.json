{"ast":null,"code":"export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\nexport const getTeamSummary = team => {\n  const powerstatsSummary = [{\n    powerstat: 'intelligence',\n    value: 0\n  }, {\n    powerstat: 'strength',\n    value: 0\n  }, {\n    powerstat: 'speed',\n    value: 0\n  }, {\n    powerstat: 'durability',\n    value: 0\n  }, {\n    powerstat: 'power',\n    value: 0\n  }, {\n    powerstat: 'combat',\n    value: 0\n  }];\n  team.forEach(hero => {\n    powerstatsSummary.intelligence += parseInt(hero.powerstats.intelligence);\n    powerstatsSummary.strength += parseInt(hero.powerstats.strength);\n    powerstatsSummary.speed += parseInt(hero.powerstats.speed);\n    powerstatsSummary.durability += parseInt(hero.powerstats.durability);\n    powerstatsSummary.power += parseInt(hero.powerstats.power);\n    powerstatsSummary.combat += parseInt(hero.powerstats.combat);\n  });\n  return powerstatsSummary;\n};","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/helpers/general-helpers.js"],"names":["isHeroInTeam","enteredHero","team","includes","getTeamSummary","powerstatsSummary","powerstat","value","forEach","hero","intelligence","parseInt","powerstats","strength","speed","durability","power","combat"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,WAAD,EAAcC,IAAd,KAAuB;AACjD,SAAOA,IAAI,CAACC,QAAL,CAAcF,WAAd,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,cAAc,GAAIF,IAAD,IAAU;AACtC,QAAMG,iBAAiB,GAAG,CACxB;AAAEC,IAAAA,SAAS,EAAE,cAAb;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GADwB,EAExB;AAAED,IAAAA,SAAS,EAAE,UAAb;AAAyBC,IAAAA,KAAK,EAAE;AAAhC,GAFwB,EAGxB;AAAED,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHwB,EAIxB;AAAED,IAAAA,SAAS,EAAE,YAAb;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAJwB,EAKxB;AAAED,IAAAA,SAAS,EAAE,OAAb;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GALwB,EAMxB;AAAED,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GANwB,CAA1B;AASAL,EAAAA,IAAI,CAACM,OAAL,CAAcC,IAAD,IAAU;AACrBJ,IAAAA,iBAAiB,CAACK,YAAlB,IAAkCC,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBF,YAAjB,CAA1C;AACAL,IAAAA,iBAAiB,CAACQ,QAAlB,IAA8BF,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBC,QAAjB,CAAtC;AACAR,IAAAA,iBAAiB,CAACS,KAAlB,IAA2BH,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBE,KAAjB,CAAnC;AACAT,IAAAA,iBAAiB,CAACU,UAAlB,IAAgCJ,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBG,UAAjB,CAAxC;AACAV,IAAAA,iBAAiB,CAACW,KAAlB,IAA2BL,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBI,KAAjB,CAAnC;AACAX,IAAAA,iBAAiB,CAACY,MAAlB,IAA4BN,QAAQ,CAACF,IAAI,CAACG,UAAL,CAAgBK,MAAjB,CAApC;AACD,GAPD;AASA,SAAOZ,iBAAP;AACD,CApBM","sourcesContent":["export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\n\nexport const getTeamSummary = (team) => {\n  const powerstatsSummary = [\n    { powerstat: 'intelligence', value: 0 },\n    { powerstat: 'strength', value: 0 },\n    { powerstat: 'speed', value: 0 },\n    { powerstat: 'durability', value: 0 },\n    { powerstat: 'power', value: 0 },\n    { powerstat: 'combat', value: 0 },\n  ];\n\n  team.forEach((hero) => {\n    powerstatsSummary.intelligence += parseInt(hero.powerstats.intelligence);\n    powerstatsSummary.strength += parseInt(hero.powerstats.strength);\n    powerstatsSummary.speed += parseInt(hero.powerstats.speed);\n    powerstatsSummary.durability += parseInt(hero.powerstats.durability);\n    powerstatsSummary.power += parseInt(hero.powerstats.power);\n    powerstatsSummary.combat += parseInt(hero.powerstats.combat);\n  });\n\n  return powerstatsSummary;\n};\n"]},"metadata":{},"sourceType":"module"}