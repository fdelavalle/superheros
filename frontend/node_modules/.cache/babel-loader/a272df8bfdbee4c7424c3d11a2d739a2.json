{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/frontend/src/components/card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport TeamMembersContext from '../../store/teamMembers-context';\nimport HeroModal from '../modal/HeroModal';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const {\n    image,\n    name\n  } = props.hero;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    addHero,\n    removeHero,\n    heros\n  } = useContext(TeamMembersContext);\n  let buttonClasses;\n  let buttonText;\n  let functionality;\n\n  if (props.inHome) {\n    buttonClasses = 'btn btn-danger';\n    buttonText = 'Delete Hero';\n    functionality = removeHero();\n  } else {\n    buttonClasses = 'btn btn-success';\n    buttonText = 'Add Hero';\n    functionality = addHero();\n  }\n\n  const openModalHandler = () => {\n    setIsModalOpen(true);\n  };\n\n  const updateTeamHandler = () => {\n    addHero(props.hero);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(HeroModal, {\n      hero: props.hero,\n      show: isModalOpen,\n      setShow: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-dark text-white mt-2 h-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        loading: \"lazy\",\n        decoding: \"async\",\n        src: image.url,\n        className: \"card-img h-500\",\n        alt: `${name} card`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-img-overlay d-flex flex-column justify-content-between p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 mt-2 opacity h-4r\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title text-center\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateTeamHandler,\n            type: \"button\",\n            className: buttonClasses,\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModalHandler,\n            type: \"button\",\n            className: \"btn btn-primary\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"IyMP6r3rCisiLFonRJhyaO7a9ds=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/components/card/Card.js"],"names":["React","useState","useContext","TeamMembersContext","HeroModal","Card","props","image","name","hero","isModalOpen","setIsModalOpen","addHero","removeHero","heros","buttonClasses","buttonText","functionality","inHome","openModalHandler","updateTeamHandler","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,KAAK,CAACG,IAA9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAiCZ,UAAU,CAACC,kBAAD,CAAjD;AAEA,MAAIY,aAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,aAAJ;;AAEA,MAAIX,KAAK,CAACY,MAAV,EAAkB;AAChBH,IAAAA,aAAa,GAAG,gBAAhB;AACAC,IAAAA,UAAU,GAAG,aAAb;AACAC,IAAAA,aAAa,GAAGJ,UAAU,EAA1B;AACD,GAJD,MAIO;AACLE,IAAAA,aAAa,GAAG,iBAAhB;AACAC,IAAAA,UAAU,GAAG,UAAb;AACAC,IAAAA,aAAa,GAAGL,OAAO,EAAvB;AACD;;AAED,QAAMO,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAG,MAAM;AAC9BR,IAAAA,OAAO,CAACN,KAAK,CAACG,IAAP,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACGC,WAAW,iBACV,QAAC,SAAD;AACE,MAAA,IAAI,EAAEJ,KAAK,CAACG,IADd;AAEE,MAAA,IAAI,EAAEC,WAFR;AAGE,MAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,8BACE;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,QAAQ,EAAC,OAFX;AAGE,QAAA,GAAG,EAAEJ,KAAK,CAACc,GAHb;AAIE,QAAA,SAAS,EAAC,gBAJZ;AAKE,QAAA,GAAG,EAAG,GAAEb,IAAK;AALf;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,iEAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,sBAAwCA;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,kCACE;AACE,YAAA,OAAO,EAAEY,iBADX;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEL,aAHb;AAAA,sBAKGC;AALH;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,OAAO,EAAEG,gBADX;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CArED;;GAAMd,I;;KAAAA,I;AAuEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport TeamMembersContext from '../../store/teamMembers-context';\nimport HeroModal from '../modal/HeroModal';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const { image, name } = props.hero;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { addHero, removeHero, heros } = useContext(TeamMembersContext);\n\n  let buttonClasses;\n  let buttonText;\n  let functionality;\n\n  if (props.inHome) {\n    buttonClasses = 'btn btn-danger';\n    buttonText = 'Delete Hero';\n    functionality = removeHero();\n  } else {\n    buttonClasses = 'btn btn-success';\n    buttonText = 'Add Hero';\n    functionality = addHero();\n  }\n\n  const openModalHandler = () => {\n    setIsModalOpen(true);\n  };\n\n  const updateTeamHandler = () => {\n    addHero(props.hero);\n  };\n\n  return (\n    <React.Fragment>\n      {isModalOpen && (\n        <HeroModal\n          hero={props.hero}\n          show={isModalOpen}\n          setShow={setIsModalOpen}\n        />\n      )}\n      <div className='card bg-dark text-white mt-2 h-500'>\n        <img\n          loading='lazy'\n          decoding='async'\n          src={image.url}\n          className='card-img h-500'\n          alt={`${name} card`}\n        />\n        <div className='card-img-overlay d-flex flex-column justify-content-between p-0'>\n          <div className='p-3 mt-2 opacity h-4r'>\n            <h3 className='card-title text-center'>{name}</h3>\n          </div>\n\n          <div className='d-flex justify-content-around mb-5'>\n            <button\n              onClick={updateTeamHandler}\n              type='button'\n              className={buttonClasses}\n            >\n              {buttonText}\n            </button>\n            <button\n              onClick={openModalHandler}\n              type='button'\n              className='btn btn-primary'\n            >\n              Details\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}