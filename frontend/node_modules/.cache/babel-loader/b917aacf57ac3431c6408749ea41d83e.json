{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/src/components/search/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport FilteredHerosContext from '../../store/filted-heros-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  const {\n    updateHeros\n  } = useContext(FilteredHerosContext);\n  const [enteredSuperhero, setEnteredSuperhero] = useState('');\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (!enteredSuperhero) {\n        return updateHeros('');\n      }\n\n      if (enteredSuperhero) {\n        const fetchSuperHero = () => {\n          updateHeros(enteredSuperhero);\n        };\n\n        try {\n          fetchSuperHero();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredSuperhero, updateHeros]);\n\n  const superheroChangeHandler = event => {\n    setEnteredSuperhero(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"superhero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"superhero\",\n        name: \"superhero\",\n        onChange: superheroChangeHandler,\n        value: enteredSuperhero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"IfF3Q/N8dcvRvKhGHO5tUAoRAqY=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/src/components/search/Input.js"],"names":["React","useState","useEffect","useContext","FilteredHerosContext","Input","props","updateHeros","enteredSuperhero","setEnteredSuperhero","timer","setTimeout","fetchSuperHero","error","console","log","clearTimeout","superheroChangeHandler","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,oBAAP,MAAiC,kCAAjC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,UAAU,CAACC,oBAAD,CAAlC;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,UAAI,CAACH,gBAAL,EAAuB;AACrB,eAAOD,WAAW,CAAC,EAAD,CAAlB;AACD;;AACD,UAAIC,gBAAJ,EAAsB;AACpB,cAAMI,cAAc,GAAG,MAAM;AAC3BL,UAAAA,WAAW,CAACC,gBAAD,CAAX;AACD,SAFD;;AAGA,YAAI;AACFI,UAAAA,cAAc;AACf,SAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AACF,KAduB,EAcrB,GAdqB,CAAxB;AAeA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACF,gBAAD,EAAmBD,WAAnB,CAnBM,CAAT;;AAqBA,QAAMU,sBAAsB,GAAIC,KAAD,IAAW;AACxCT,IAAAA,mBAAmB,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,QAAQ,EAAEH,sBAJZ;AAKE,QAAA,KAAK,EAAET;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMH,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport FilteredHerosContext from '../../store/filted-heros-context';\n\nconst Input = (props) => {\n  const { updateHeros } = useContext(FilteredHerosContext);\n  const [enteredSuperhero, setEnteredSuperhero] = useState('');\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (!enteredSuperhero) {\n        return updateHeros('');\n      }\n      if (enteredSuperhero) {\n        const fetchSuperHero = () => {\n          updateHeros(enteredSuperhero);\n        };\n        try {\n          fetchSuperHero();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredSuperhero, updateHeros]);\n\n  const superheroChangeHandler = (event) => {\n    setEnteredSuperhero(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <form>\n        <label htmlFor='superhero'></label>\n        <input\n          type='text'\n          id='superhero'\n          name='superhero'\n          onChange={superheroChangeHandler}\n          value={enteredSuperhero}\n        />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}