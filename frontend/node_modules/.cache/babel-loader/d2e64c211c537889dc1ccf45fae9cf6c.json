{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/frontend/src/store/teamMembers-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { isHeroInTeam, getTeamSummary, getWeightAndHeight } from '../helpers/general-helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamMembersContext = /*#__PURE__*/React.createContext({\n  heros: [],\n  addHero: hero => {},\n  removeHero: id => {},\n  teamSummary: [],\n  stats: {}\n});\nexport const TeamMembersContextProvider = props => {\n  _s();\n\n  const [heros, setHeros] = useState([]);\n  const [goodHerosCounter, setGoodHerosCounter] = useState(0);\n  const [badHerosCounter, setBadHerosCounter] = useState(0);\n  const [teamFullOfGoodHeros, setTeamFullOfGoodHeros] = useState(false);\n  const [teamFullOfBadHeros, setTeamFullOfBadHeros] = useState(false);\n  const [teamSummary, setTeamSummary] = useState([]);\n  const [stats, setStats] = useState({});\n  useEffect(() => {\n    setTeamSummary(getTeamSummary(heros));\n    setStats(getWeightAndHeight(heros));\n\n    if (goodHerosCounter === 3) {\n      setTeamFullOfGoodHeros(true);\n    } else {\n      if (goodHerosCounter < 3) {\n        setTeamFullOfGoodHeros(false);\n      }\n    }\n\n    if (badHerosCounter >= 3) {\n      setTeamFullOfBadHeros(true);\n    } else {\n      if (badHerosCounter < 3) {\n        setTeamFullOfBadHeros(false);\n      }\n    }\n  }, [goodHerosCounter, badHerosCounter, heros]); // console.log(teamSummary);\n\n  const addHeroToTeamHandler = hero => {\n    if (hero.biography.alignment === 'good' && teamFullOfGoodHeros) {\n      return;\n    }\n\n    if (hero.biography.alignment === 'bad' && teamFullOfBadHeros) {\n      return;\n    }\n\n    if (isHeroInTeam(hero, heros)) return;\n    setHeros(prevHeros => {\n      if (hero.biography.alignment === 'good') {\n        setGoodHerosCounter(prevCount => prevCount + 1);\n      }\n\n      if (hero.biography.alignment === 'bad') {\n        setBadHerosCounter(prevCount => prevCount + 1);\n      }\n\n      const updatedHeros = [...prevHeros];\n\n      if (updatedHeros.some(updatedHero => updatedHero.name === hero.name)) {\n        return;\n      }\n\n      updatedHeros.push(hero);\n      console.log(updatedHeros);\n      return updatedHeros;\n    });\n  };\n\n  const removeHeroFromTeamHandler = enteredHero => {\n    if (enteredHero.biography.alignment === 'good') {\n      setGoodHerosCounter(prevCount => prevCount - 1);\n    }\n\n    if (enteredHero.biography.alignment === 'bad') {\n      setBadHerosCounter(prevCount => prevCount - 1);\n    }\n\n    setHeros(prevHeros => {\n      const updatedHeros = prevHeros.filter(hero => hero.id !== enteredHero.id);\n      return updatedHeros;\n    });\n  };\n\n  const teamContextValue = {\n    heros: heros,\n    addHero: addHeroToTeamHandler,\n    removeHero: removeHeroFromTeamHandler,\n    teamSummary: teamSummary,\n    stats: stats\n  };\n  return /*#__PURE__*/_jsxDEV(TeamMembersContext.Provider, {\n    value: teamContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamMembersContextProvider, \"ElRG+b7HNggXvmSfdT7+XIYT3zA=\");\n\n_c = TeamMembersContextProvider;\nexport default TeamMembersContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamMembersContextProvider\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/store/teamMembers-context.js"],"names":["React","useState","useEffect","isHeroInTeam","getTeamSummary","getWeightAndHeight","TeamMembersContext","createContext","heros","addHero","hero","removeHero","id","teamSummary","stats","TeamMembersContextProvider","props","setHeros","goodHerosCounter","setGoodHerosCounter","badHerosCounter","setBadHerosCounter","teamFullOfGoodHeros","setTeamFullOfGoodHeros","teamFullOfBadHeros","setTeamFullOfBadHeros","setTeamSummary","setStats","addHeroToTeamHandler","biography","alignment","prevHeros","prevCount","updatedHeros","some","updatedHero","name","push","console","log","removeHeroFromTeamHandler","enteredHero","filter","teamContextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  isHeroInTeam,\n  getTeamSummary,\n  getWeightAndHeight,\n} from '../helpers/general-helpers';\n\nconst TeamMembersContext = React.createContext({\n  heros: [],\n  addHero: (hero) => {},\n  removeHero: (id) => {},\n  teamSummary: [],\n  stats: {},\n});\n\nexport const TeamMembersContextProvider = (props) => {\n  const [heros, setHeros] = useState([]);\n  const [goodHerosCounter, setGoodHerosCounter] = useState(0);\n  const [badHerosCounter, setBadHerosCounter] = useState(0);\n  const [teamFullOfGoodHeros, setTeamFullOfGoodHeros] = useState(false);\n  const [teamFullOfBadHeros, setTeamFullOfBadHeros] = useState(false);\n  const [teamSummary, setTeamSummary] = useState([]);\n  const [stats, setStats] = useState({});\n\n  useEffect(() => {\n    setTeamSummary(getTeamSummary(heros));\n    setStats(getWeightAndHeight(heros));\n    if (goodHerosCounter === 3) {\n      setTeamFullOfGoodHeros(true);\n    } else {\n      if (goodHerosCounter < 3) {\n        setTeamFullOfGoodHeros(false);\n      }\n    }\n    if (badHerosCounter >= 3) {\n      setTeamFullOfBadHeros(true);\n    } else {\n      if (badHerosCounter < 3) {\n        setTeamFullOfBadHeros(false);\n      }\n    }\n  }, [goodHerosCounter, badHerosCounter, heros]);\n\n  // console.log(teamSummary);\n\n  const addHeroToTeamHandler = (hero) => {\n    if (hero.biography.alignment === 'good' && teamFullOfGoodHeros) {\n      return;\n    }\n\n    if (hero.biography.alignment === 'bad' && teamFullOfBadHeros) {\n      return;\n    }\n    if (isHeroInTeam(hero, heros)) return;\n\n    setHeros((prevHeros) => {\n      if (hero.biography.alignment === 'good') {\n        setGoodHerosCounter((prevCount) => prevCount + 1);\n      }\n      if (hero.biography.alignment === 'bad') {\n        setBadHerosCounter((prevCount) => prevCount + 1);\n      }\n\n      const updatedHeros = [...prevHeros];\n      if (updatedHeros.some((updatedHero) => updatedHero.name === hero.name)) {\n        return;\n      }\n\n      updatedHeros.push(hero);\n      console.log(updatedHeros);\n      return updatedHeros;\n    });\n  };\n\n  const removeHeroFromTeamHandler = (enteredHero) => {\n    if (enteredHero.biography.alignment === 'good') {\n      setGoodHerosCounter((prevCount) => prevCount - 1);\n    }\n    if (enteredHero.biography.alignment === 'bad') {\n      setBadHerosCounter((prevCount) => prevCount - 1);\n    }\n    setHeros((prevHeros) => {\n      const updatedHeros = prevHeros.filter(\n        (hero) => hero.id !== enteredHero.id\n      );\n\n      return updatedHeros;\n    });\n  };\n\n  const teamContextValue = {\n    heros: heros,\n    addHero: addHeroToTeamHandler,\n    removeHero: removeHeroFromTeamHandler,\n    teamSummary: teamSummary,\n    stats: stats,\n  };\n\n  return (\n    <TeamMembersContext.Provider value={teamContextValue}>\n      {props.children}\n    </TeamMembersContext.Provider>\n  );\n};\n\nexport default TeamMembersContext;\n"]},"metadata":{},"sourceType":"module"}