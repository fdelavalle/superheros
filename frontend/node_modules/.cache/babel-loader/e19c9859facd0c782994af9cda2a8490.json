{"ast":null,"code":"export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\nexport const getTeamSummary = team => {\n  const powerstatsSummary = [{\n    powerstat: 'Intelligence',\n    value: 0\n  }, {\n    powerstat: 'Strength',\n    value: 0\n  }, {\n    powerstat: 'Speed',\n    value: 0\n  }, {\n    powerstat: 'Durability',\n    value: 0\n  }, {\n    powerstat: 'Power',\n    value: 0\n  }, {\n    powerstat: 'Combat',\n    value: 0\n  }];\n  team.forEach(hero => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    } else {\n      powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    }\n\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    } else {\n      powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    }\n\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    } else {\n      powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    }\n\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    } else {\n      powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    }\n\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    } else {\n      powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    }\n\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    } else {\n      powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n    }\n  });\n  return powerstatsSummary;\n};\n\nconst getStrongestStat = powerstatsSummary => {\n  const max = powerstatsSummary.reduce((prev, current) => prev.value > current.value ? prev : current, 1);\n  return max;\n};\n\nexport const getWeightAndHeight = team => {\n  const stats = {\n    weight: 0,\n    height: 0,\n    strongestStat: ''\n  };\n  team.forEach(hero => {\n    stats.weight += parseInt(hero.appearance.weight[1].replace(' kg', ''));\n    stats.height += parseInt(hero.appearance.height[1].replace(' cm', ''));\n  });\n  if (team) stats.strongestStat = getStrongestStat(team);\n  return stats;\n};","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/helpers/general-helpers.js"],"names":["isHeroInTeam","enteredHero","team","includes","getTeamSummary","powerstatsSummary","powerstat","value","forEach","hero","powerstats","intelligence","parseInt","strength","speed","durability","power","combat","getStrongestStat","max","reduce","prev","current","getWeightAndHeight","stats","weight","height","strongestStat","appearance","replace"],"mappings":"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","sourcesContent":["export const isHeroInTeam = (enteredHero, team) => {\n  return team.includes(enteredHero);\n};\n\nexport const getTeamSummary = (team) => {\n  const powerstatsSummary = [\n    { powerstat: 'Intelligence', value: 0 },\n    { powerstat: 'Strength', value: 0 },\n    { powerstat: 'Speed', value: 0 },\n    { powerstat: 'Durability', value: 0 },\n    { powerstat: 'Power', value: 0 },\n    { powerstat: 'Combat', value: 0 },\n  ];\n\n  team.forEach((hero) => {\n    if (hero.powerstats.intelligence === 'null') {\n      powerstatsSummary[0].value += 0;\n    } else {\n      powerstatsSummary[0].value += parseInt(hero.powerstats.intelligence);\n    }\n    if (hero.powerstats.strength === 'null') {\n      powerstatsSummary[1].value += 0;\n    } else {\n      powerstatsSummary[1].value += parseInt(hero.powerstats.strength);\n    }\n    if (hero.powerstats.speed === 'null') {\n      powerstatsSummary[2].value += 0;\n    } else {\n      powerstatsSummary[2].value += parseInt(hero.powerstats.speed);\n    }\n    if (hero.powerstats.durability === 'null') {\n      powerstatsSummary[3].value += 0;\n    } else {\n      powerstatsSummary[3].value += parseInt(hero.powerstats.durability);\n    }\n    if (hero.powerstats.power === 'null') {\n      powerstatsSummary[4].value += 0;\n    } else {\n      powerstatsSummary[4].value += parseInt(hero.powerstats.power);\n    }\n    if (hero.powerstats.combat === 'null') {\n      powerstatsSummary[5].value += 0;\n    } else {\n      powerstatsSummary[5].value += parseInt(hero.powerstats.combat);\n    }\n  });\n\n  return powerstatsSummary;\n};\n\nconst getStrongestStat = (powerstatsSummary) => {\n  const max = powerstatsSummary.reduce(\n    (prev, current) => (prev.value > current.value ? prev : current),\n    1\n  );\n  return max;\n};\n\nexport const getWeightAndHeight = (team) => {\n  const stats = { weight: 0, height: 0, strongestStat: '' };\n\n  team.forEach((hero) => {\n    stats.weight += parseInt(hero.appearance.weight[1].replace(' kg', ''));\n    stats.height += parseInt(hero.appearance.height[1].replace(' cm', ''));\n  });\n\n  if (team) stats.strongestStat = getStrongestStat(team);\n\n  return stats;\n};\n"]},"metadata":{},"sourceType":"module"}