{"ast":null,"code":"var _jsxFileName = \"/home/facu/Desktop/alkemy/superheros/frontend/src/store/teamMembers-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { isHeroInTeam, checkBadHerosInTeam, checkGoodHerosInTeam } from '../helpers/team-validity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamMembersContext = /*#__PURE__*/React.createContext({\n  heros: [],\n  addHero: hero => {},\n  removeHero: id => {}\n});\nexport const TeamMembersContextProvider = props => {\n  _s();\n\n  const [heros, setHeros] = useState([]);\n  const [goodHerosCounter, setGoodHerosCounter] = useState(0);\n  const [badHerosCounter, setBadHerosCounter] = useState(0);\n  const [teamFullOfGoodHeros, setTeamFullOfGoodHeros] = useState(false);\n  const [teamFullOfBadHeros, setTeamFullOfBadHeros] = useState(false);\n  console.log('OgoodO', goodHerosCounter);\n  console.log('ObadO', badHerosCounter);\n\n  const addHeroToTeamHandler = hero => {\n    if (isHeroInTeam(hero, heros)) return;\n\n    if (goodHerosCounter === 2) {\n      console.log(goodHerosCounter);\n      console.log('BUENOS LISTOS');\n    }\n\n    if (badHerosCounter === 3) {\n      console.log('MALOS LISTOS');\n    }\n\n    setHeros(prevHeros => {\n      if (hero.biography.alignment === 'good' && teamFullOfGoodHeros) {\n        return;\n      }\n\n      if (hero.biography.alignment === 'bad' && teamFullOfBadHeros) {\n        return;\n      }\n\n      if (hero.biography.alignment === 'good' && !teamFullOfGoodHeros) {\n        setGoodHerosCounter(prevCount => prevCount + 1);\n      } else {\n        if (hero.biography.alignment === 'bad' && !teamFullOfBadHeros) setBadHerosCounter(prevCount => prevCount + 1);\n        return;\n      }\n\n      const updatedHeros = [...prevHeros];\n      updatedHeros.push(hero);\n      return updatedHeros;\n    });\n  };\n\n  const removeHeroFromTeamHandler = enteredHero => {\n    setHeros(prevHeros => {\n      const updatedHeros = prevHeros.filter(hero => hero.id !== enteredHero.id);\n      return updatedHeros;\n    });\n  };\n\n  const teamContextValue = {\n    heros: heros,\n    addHero: addHeroToTeamHandler,\n    removeHero: removeHeroFromTeamHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TeamMembersContext.Provider, {\n    value: teamContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamMembersContextProvider, \"TvnMJIVqWZAETYmwLLnruRYnn5Y=\");\n\n_c = TeamMembersContextProvider;\nexport default TeamMembersContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamMembersContextProvider\");","map":{"version":3,"sources":["/home/facu/Desktop/alkemy/superheros/frontend/src/store/teamMembers-context.js"],"names":["React","useState","isHeroInTeam","checkBadHerosInTeam","checkGoodHerosInTeam","TeamMembersContext","createContext","heros","addHero","hero","removeHero","id","TeamMembersContextProvider","props","setHeros","goodHerosCounter","setGoodHerosCounter","badHerosCounter","setBadHerosCounter","teamFullOfGoodHeros","setTeamFullOfGoodHeros","teamFullOfBadHeros","setTeamFullOfBadHeros","console","log","addHeroToTeamHandler","prevHeros","biography","alignment","prevCount","updatedHeros","push","removeHeroFromTeamHandler","enteredHero","filter","teamContextValue","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  isHeroInTeam,\n  checkBadHerosInTeam,\n  checkGoodHerosInTeam,\n} from '../helpers/team-validity';\n\nconst TeamMembersContext = React.createContext({\n  heros: [],\n  addHero: (hero) => {},\n  removeHero: (id) => {},\n});\n\nexport const TeamMembersContextProvider = (props) => {\n  const [heros, setHeros] = useState([]);\n  const [goodHerosCounter, setGoodHerosCounter] = useState(0);\n  const [badHerosCounter, setBadHerosCounter] = useState(0);\n  const [teamFullOfGoodHeros, setTeamFullOfGoodHeros] = useState(false);\n  const [teamFullOfBadHeros, setTeamFullOfBadHeros] = useState(false);\n\n  console.log('OgoodO', goodHerosCounter);\n  console.log('ObadO', badHerosCounter);\n\n  const addHeroToTeamHandler = (hero) => {\n    if (isHeroInTeam(hero, heros)) return;\n    if (goodHerosCounter === 2) {\n      console.log(goodHerosCounter);\n      console.log('BUENOS LISTOS');\n    }\n    if (badHerosCounter === 3) {\n      console.log('MALOS LISTOS');\n    }\n\n    setHeros((prevHeros) => {\n      if (hero.biography.alignment === 'good' && teamFullOfGoodHeros) {\n        return;\n      }\n      if (hero.biography.alignment === 'bad' && teamFullOfBadHeros) {\n        return;\n      }\n      if (hero.biography.alignment === 'good' && !teamFullOfGoodHeros) {\n        setGoodHerosCounter((prevCount) => prevCount + 1);\n      } else {\n        if (hero.biography.alignment === 'bad' && !teamFullOfBadHeros)\n          setBadHerosCounter((prevCount) => prevCount + 1);\n        return;\n      }\n      const updatedHeros = [...prevHeros];\n      updatedHeros.push(hero);\n\n      return updatedHeros;\n    });\n  };\n\n  const removeHeroFromTeamHandler = (enteredHero) => {\n    setHeros((prevHeros) => {\n      const updatedHeros = prevHeros.filter(\n        (hero) => hero.id !== enteredHero.id\n      );\n      return updatedHeros;\n    });\n  };\n\n  const teamContextValue = {\n    heros: heros,\n    addHero: addHeroToTeamHandler,\n    removeHero: removeHeroFromTeamHandler,\n  };\n\n  return (\n    <TeamMembersContext.Provider value={teamContextValue}>\n      {props.children}\n    </TeamMembersContext.Provider>\n  );\n};\n\nexport default TeamMembersContext;\n"]},"metadata":{},"sourceType":"module"}